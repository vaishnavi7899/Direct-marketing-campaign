# -*- coding: utf-8 -*-
"""Assignment

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1YuDh33LUr1rOEtp3PJJUM1q2fBiWfsIf

IMPORT LIBRARIES
"""

import numpy as np
import matplotlib.pyplot as plt
import pandas as pd
import sklearn
import seaborn as sns

"""IMPORT DATASET INTO X AND Y WHERE THEY ARE INDEPENDENT AND DEPENDENT VARIABLE RESPECTIVELY"""

dataset= pd.read_csv('bankfinal.csv')
X = dataset.iloc[:, :-1].values
y = dataset.iloc[:, -1].values
print(X)
print(y)

"""ENCODING THE CATEGORICAL DATA AMONG THE INDEPENDENT VARIABLES"""

from sklearn.compose import ColumnTransformer
from sklearn.preprocessing import OneHotEncoder
ct = ColumnTransformer(transformers = [('encoder',OneHotEncoder(),[1,2,3,4,6,7,8,10,15])], remainder='passthrough')
X = np.array(ct.fit_transform(X))

"""ENCODING THE CATEGORICAL DATA IN THE DEPENDENT VARIABLE"""

from sklearn.preprocessing import LabelEncoder
le = LabelEncoder()
y = le.fit_transform(y)
print(y)

"""SPLIT INTO TRAINING AND TESTING DATA"""

from sklearn.model_selection import train_test_split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size = 0.25, random_state = 0)

print(X_train)

print(X_test)

print(y_test)

print(y_train)

"""FEATURE SCALING"""

from sklearn.preprocessing import StandardScaler
sc = StandardScaler()
X_train = sc.fit_transform(X_train)
X_test = sc.fit_transform(X_test)

print(X_test)

print(X_train)

"""TRAINING THE LOGISTIC REGRESSION MODEL ON TRAINING SET"""

from sklearn.linear_model import LogisticRegression
classifier = LogisticRegression(random_state=0)
classifier.fit(X_train,y_train)

"""PREDICTING TEST RESULT"""

y_pred = classifier.predict(X_test)
print(np.concatenate((y_pred.reshape(len(y_pred),1), y_test.reshape(len(y_test),1)),1))

"""CONFUSION MATRIX"""

from sklearn.metrics import confusion_matrix, accuracy_score
cm = confusion_matrix(y_test,y_pred)
print(cm)
accuracy_score(y_test,y_pred)

a = accuracy_score(y_test,y_pred)*100
print('The accuracy of the model is:')
print(a)

"""UNDERSTANDING QUANTITIVE VARIABLES OF DATASET"""

dataset.describe()

dataset.corr()

"""HEATMAP USING SEABORN"""

plt.figure(figsize=(7,7))
sns.heatmap(dataset.corr() , annot=True , cmap= 'coolwarm')